version: 2

# https://circleci.com/docs/2.0/executor-types/
# https://circleci.com/docs/2.0/circleci-images/

################################################################################
# CONFIG.
################################################################################

env_config: &env_config
  parallelism: 1
  working_directory: ~/armchairdj/armchair-dj-rails
  shell: /bin/bash --login
  docker:
    - image: circleci/ruby:2.4-node
      environment:
        BUNDLE_JOBS: 3
        BUNDLE_RETRY: 3
        BUNDLE_PATH: vendor/bundle
        PGHOST: 127.0.0.1
        PGUSER: armchairdj_postgres
        RAILS_ENV: test
        RACK_ENV: test
    - image: circleci/postgres:10.4-alpine-ram
      environment:
        POSTGRES_USER: armchairdj_postgres
        POSTGRES_DB: armchairdj_postgres_test
        POSTGRES_PASSWORD: ""

################################################################################
# JOBS.
################################################################################

jobs:
  build_and_run_specs:
    <<: *env_config
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_RESULTS: /tmp/circleci-test-results
    steps:
      - checkout # special step to check out source code to working directory

      # Prepare for artifact and test results
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_RESULTS

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - armchair-dj-rails-bundle-v2-{{ checksum "Gemfile.lock" }}
            - armchair-dj-rails-bundle-v2-

      # Install bundles
      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: armchair-dj-rails-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Restore yarn cache
      - restore_cache:
          keys:
            - armchair-dj-rails-yarn-{{ checksum "yarn.lock" }}
            - armchair-dj-rails-yarn-

      # Install yarn packages
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn cache
      - save_cache:
          key: armchair-dj-rails-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # Create DB docker image
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Load schema
      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      # Run Rpsec
      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out $CIRCLE_TEST_RESULTS/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # Save test results & artifacts
      - store_test_results:
          path: $CIRCLE_TEST_RESULTS
      - store_artifacts:
          path: $CIRCLE_ARTIFACTS

################################################################################
# WORKFLOWS.
################################################################################

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_run_specs
