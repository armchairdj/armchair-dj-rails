<%
  html_opts = { class: "admin" }

  if @post.persisted? && @post.unpublished?
    html_opts = js_autosavable_attrs(@post).merge(html_opts)
  end
%>

<%= content_tag(:p, class: "form-instructions") do %>
  <% if @post.new_record? %>
    <%= I18n.t("content.posts.new.instructions.#{controller_name}") %>
  <% elsif @post.published? %>
    <%= I18n.t("content.posts.edit.instructions.published") %>
  <% else %>
    <%= I18n.t("content.posts.edit.instructions.unpublished") %>
  <% end %>
<% end %>

<%= simple_form_for([:admin, @post], html: html_opts) do |f| %>
  <%= f.error_notification %>

  <%= form_inputs do %>
    <%= adj_module do %>
      <%= content_tag(:fieldset) do %>
        <%= render "admin/posts/#{controller_name}/model_specific_fields", f: f %>

        <% unless @post.new_record? %>
          <%= render "admin/posts/standard_fields", f: f %>
        <% end %>
      <% end %>
    <% end %>

    <% unless @post.new_record? %>
      <%= render "admin/links/has_many_links_fieldset", f: f %>
      <%= render "admin/posts/publication_fieldset",    f: f %>
    <% end %>
  <% end %>

  <%= button_group do %>
    <%= submit_button(@post) %>

    <% if false %>
      <%= submit_button @post, "Preview", name: "step", value: "preview", class: "tertiary",
        "data-controller": "previewable",
        "data-action":     "previewable#preview"
      %>
    <% end %>
  <% end %>
<% end %>
