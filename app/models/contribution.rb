# frozen_string_literal: true

class Contribution < ApplicationRecord

  #############################################################################
  # CONSTANTS.
  #############################################################################

  #############################################################################
  # CONCERNS.
  #############################################################################

  include Alphabetizable
  include Workable

  #############################################################################
  # CLASS.
  #############################################################################

  #############################################################################
  # SCOPES.
  #############################################################################

  #############################################################################
  # ASSOCIATIONS.
  #############################################################################

  belongs_to :role

  #############################################################################
  # ATTRIBUTES.
  #############################################################################

  delegate :name, to: :role

  #############################################################################
  # VALIDATIONS.
  #############################################################################

  validates :role_id, presence: true

  validates :creator_id, uniqueness: { scope: [:work_id, :role_id] }

  #############################################################################
  # HOOKS.
  #############################################################################

  #############################################################################
  # INSTANCE.
  #############################################################################

  def alpha_parts
    [work.try(:alpha_parts), role.try(:name), creator.try(:name)]
  end
end
