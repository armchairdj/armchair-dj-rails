class User < ApplicationRecord

  #############################################################################
  # CONSTANTS.
  #############################################################################

  #############################################################################
  # PLUGINS.
  #############################################################################

  devise(
    # :omniauthable,
    # :timeoutable,
    :confirmable,
    :database_authenticatable,
    :lockable,
    :recoverable,
    :registerable,
    :rememberable,
    :trackable,
    :validatable
  )

  #############################################################################
  # ASSOCIATIONS.
  #############################################################################

  #############################################################################
  # ENUMS.
  #############################################################################

  enum role: {
    guest:       0,
    member:      1,
    contributor: 2,
    admin:       3
  }

  #############################################################################
  # SCOPES.
  #############################################################################

  #############################################################################
  # VALIDATIONS.
  #############################################################################

  validates :first_name, presence: true

  validates :last_name, presence: true

  validates :role, presence: true

  #############################################################################
  # HOOKS.
  #############################################################################

  before_validation :set_default_role, if: :new_record?

  #############################################################################
  # INSTANCE.
  #############################################################################

  def set_default_role
    self.role = :guest if self.role.nil?
  end

  def guest?
    self.role == "guest"
  end

  def member?
    self.role == "member"
  end

  def contributor?
    self.role == "contributor"
  end

  def admin?
    self.role == "admin"
  end

  #############################################################################
  # CLASS.
  #############################################################################

end
