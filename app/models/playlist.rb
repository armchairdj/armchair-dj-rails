class Playlist < ApplicationRecord

  #############################################################################
  # CONSTANTS.
  #############################################################################

  #############################################################################
  # CONCERNS.
  #############################################################################

  include Authorable
  include Displayable

  #############################################################################
  # CLASS.
  #############################################################################

  #############################################################################
  # SCOPES.
  #############################################################################

  scope :eager,     -> { includes(:playlistings, :works) }
  scope :for_admin, -> { eager }
  scope :for_site,  -> { eager.alpha }

  #############################################################################
  # ASSOCIATIONS.
  #############################################################################

  has_many :playlistings, inverse_of: :playlist, dependent: :destroy

  has_many :works, through: :playlistings

  has_many :posts, dependent: :destroy

  #############################################################################
  # ATTRIBUTES.
  #############################################################################

  accepts_nested_attributes_for :playlistings, allow_destroy: true,
    reject_if: proc { |attrs| attrs["work_id"].blank? }

  #############################################################################
  # VALIDATIONS.
  #############################################################################

  #############################################################################
  # HOOKS.
  #############################################################################

  #############################################################################
  # SLUGGABLE.
  #############################################################################

  def sluggable_parts
    [title]
  end

  #############################################################################
  # INSTANCE.
  #############################################################################

  def alpha_parts
    [title]
  end
end
