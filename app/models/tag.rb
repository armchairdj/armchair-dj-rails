class Tag < ApplicationRecord

  #############################################################################
  # CONSTANTS.
  #############################################################################

  #############################################################################
  # CONCERNS.
  #############################################################################

  include Alphabetizable
  include Summarizable
  include Viewable

  #############################################################################
  # CLASS.
  #############################################################################

  #############################################################################
  # SCOPES.
  #############################################################################

  scope   :categorized, -> { joins(:category) }
  scope :uncategorized, -> { where(category_id: nil) }
  scope     :for_posts, -> { uncategorized.alpha }

  scope :eager,     -> { includes(:category, :works, :posts) }
  scope :for_admin, -> { eager }
  scope :for_site,  -> { eager.alpha }

  #############################################################################
  # ASSOCIATIONS.
  #############################################################################

  # has_ancestry

  belongs_to :category, optional: true

  has_and_belongs_to_many :works

  has_and_belongs_to_many :posts

  #############################################################################
  # ATTRIBUTES.
  #############################################################################

  #############################################################################
  # VALIDATIONS.
  #############################################################################

  validates :name, presence: true

  #############################################################################
  # HOOKS.
  #############################################################################

  #############################################################################
  # INSTANCE.
  #############################################################################

  def alpha_parts
    return [name] unless categorized?

    [category.try(:name), name]
  end

  def categorized?
    category.present?
  end

  def uncategorized?
    !categorized?
  end

  def display_category
    categorized? ? category.name : "Uncategorized"
  end
end
