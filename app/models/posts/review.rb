# frozen_string_literal: true

class Review < Post

  #############################################################################
  # CONCERNS.
  #############################################################################

  #############################################################################
  # SCOPES.
  #############################################################################

  scope :eager, -> { includes(:author, :tags, :work, :creators).references(:author) }

  #############################################################################
  # ASSOCIATIONS.
  #############################################################################

  belongs_to :work

  has_many :creators,     through: :work
  has_many :contributors, through: :work
  has_many :aspects,      through: :work

  #############################################################################
  # ATTRIBUTES.
  #############################################################################

  #############################################################################
  # VALIDATIONS.
  #############################################################################

  validates :work, presence: true

  #############################################################################
  # HOOKS.
  #############################################################################

  #############################################################################
  # SLUGGABLE.
  #############################################################################

  def sluggable_parts
    work.try(:sluggable_parts) || []
  end

  #############################################################################
  # INSTANCE.
  #############################################################################

  def display_type(plural: false)
    base = [work.try(:true_human_model_name), "Review"].compact.join(" ")

    plural ? base.pluralize : base
  end

  def alpha_parts
    work.try(:alpha_parts) || []
  end
end
