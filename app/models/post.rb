class Post < ApplicationRecord

  #############################################################################
  # CONSTANTS.
  #############################################################################

  #############################################################################
  # CONCERNS & PLUGINS.
  #############################################################################

  #############################################################################
  # ASSOCIATIONS.
  #############################################################################

  belongs_to :postable, polymorphic: true, required: false

  #############################################################################
  # ENUMS.
  #############################################################################

  #############################################################################
  # SCOPES.
  #############################################################################

  scope :reverse_cron, -> { order(published_at: :desc) }

  #############################################################################
  # VALIDATIONS.
  #############################################################################

  validates :title, presence: true
  validates :body, presence: true

  #############################################################################
  # HOOKS.
  #############################################################################

  #############################################################################
  # INSTANCE.
  #############################################################################

  def postable_gid
    self.postable.to_global_id if self.postable.present?
  end

  def postable_gid=(postable)
    self.postable = GlobalID::Locator.locate postable
  end

  #############################################################################
  # CLASS.
  #############################################################################

end
